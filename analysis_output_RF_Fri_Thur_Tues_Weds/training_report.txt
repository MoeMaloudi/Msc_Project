================================================================================
NETWORK ATTACK DETECTION - TRAINING REPORT
================================================================================

Generated: 2025-09-01 07:13:51
Features Directory: M:\TUD\ATU\Masters_project\Msc_Project\analysis_output_RF_Fri_Thur_Tues_Weds\emergency_features
Output Directory: M:\TUD\ATU\Masters_project\Msc_Project\analysis_output_RF_Fri_Thur_Tues_Weds

FEATURE INFORMATION
--------------------------------------------------
Total Features Used: 46

Selected Features:
   1. flow_duration
   2. total_packets
   3. total_bytes
   4. fwd_packets
   5. fwd_bytes
   6. fwd_packet_length_max
   7. fwd_packet_length_min
   8. fwd_packet_length_mean
   9. fwd_packet_length_std
  10. bwd_packets
  11. bwd_bytes
  12. bwd_packet_length_max
  13. bwd_packet_length_min
  14. bwd_packet_length_mean
  15. bwd_packet_length_std
  16. flow_iat_mean
  17. flow_iat_std
  18. flow_iat_max
  19. flow_iat_min
  20. active_mean
  ... and 26 more features

MODEL PERFORMANCE SUMMARY
--------------------------------------------------
Model                Accuracy   F1-Score   Attack Det.  FPR      Status      
--------------------------------------------------------------------------------
random_forest        0.9937     0.9443     0.9991       0.0110   EXCELLENT   

RANDOM_FOREST - DETAILED METRICS:
  Accuracy:              0.9937
  Precision (Macro):     0.9142
  Recall (Macro):        0.9946
  F1-Score (Macro):      0.9443
  Attack Detection Rate: 0.9991
  False Positive Rate:   0.0110
  Test Samples:          246,445

TRAINING CONFIGURATION
--------------------------------------------------
Dataset: CICIDS2017
Algorithms: LightGBM, SGD Classifier, Random Forest, XGBoost
Feature Selection: Mutual Information + Variance Analysis
Cross-Validation: Stratified Train/Test Split
Class Balancing: Enabled for Imbalanced Attack Classes
Memory Optimization: Batch Processing with Checkpoints

MODEL DEPLOYMENT INSTRUCTIONS
--------------------------------------------------
To use the trained models for new network traffic analysis:

```python
import pickle

# Load model
with open('lightgbm_model.pkl', 'rb') as f:
    model = pickle.load(f)

# Load scaler
with open('feature_scaler.pkl', 'rb') as f:
    scaler = pickle.load(f)

# Load feature names
with open('selected_features.pkl', 'rb') as f:
    feature_names = pickle.load(f)

# For new data:
# 1. Extract same features used in training
# 2. Select only features in 'feature_names'
# 3. Scale: X_scaled = scaler.transform(X)
# 4. Predict: predictions = model.predict(X_scaled)
```

================================================================================
END OF REPORT
================================================================================